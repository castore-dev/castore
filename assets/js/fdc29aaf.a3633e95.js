"use strict";(self.webpackChunk_castore_docs_docusaurus=self.webpackChunk_castore_docs_docusaurus||[]).push([[348],{46089:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>p});var a=t(28427),o=(t(2784),t(30876));const r={sidebar_position:8},s="JSON Schema Command",m={unversionedId:"resources/json-schema-command",id:"resources/json-schema-command",title:"JSON Schema Command",description:"DRY Castore Command definition using JSON Schemas and json-schema-to-ts.",source:"@site/docs/5-resources/8-json-schema-command.md",sourceDirName:"5-resources",slug:"/resources/json-schema-command",permalink:"/castore/docs/resources/json-schema-command",draft:!1,editUrl:"https://github.com/castor-dev/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5-resources/8-json-schema-command.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"In Memory Event Storage Adapter",permalink:"/castore/docs/resources/inmemory-event-storage-adapter"},next:{title:"SQS Message Queue Adapter",permalink:"/castore/docs/resources/sqs-message-queue-adapter"}},c={},p=[{value:"\ud83d\udce5 Installation",id:"-installation",level:2},{value:"\ud83d\udc69\u200d\ud83d\udcbb Usage",id:"-usage",level:2},{value:"\u2699\ufe0f Properties &amp; Methods",id:"\ufe0f-properties--methods",level:2}],i={toc:p},l="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"json-schema-command"},"JSON Schema Command"),(0,o.kt)("p",null,"DRY Castore ",(0,o.kt)("a",{parentName:"p",href:"https://castore-dev.github.io/castore/docs/the-basics/#command"},(0,o.kt)("inlineCode",{parentName:"a"},"Command"))," definition using ",(0,o.kt)("a",{parentName:"p",href:"http://json-schema.org/understanding-json-schema/reference/index.html"},"JSON Schemas")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ThomasAribart/json-schema-to-ts"},(0,o.kt)("inlineCode",{parentName:"a"},"json-schema-to-ts")),"."),(0,o.kt)("h2",{id:"-installation"},"\ud83d\udce5 Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install @castore/json-schema-command\n\n# yarn\nyarn add @castore/json-schema-command\n")),(0,o.kt)("p",null,"This package has ",(0,o.kt)("inlineCode",{parentName:"p"},"@castore/core")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"json-schema-to-ts")," (above v2) as peer dependencies, so you will have to install them as well:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install @castore/core json-schema-to-ts\n\n# yarn\nyarn add @castore/core json-schema-to-ts\n")),(0,o.kt)("h2",{id:"-usage"},"\ud83d\udc69\u200d\ud83d\udcbb Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { tuple } from '@castore/core';\nimport { JSONSchemaCommand } from '@castore/json-schema-command';\n\nconst pokemonAppearedInputSchema = {\n  type: 'object',\n  properties: {\n    name: { type: 'string' },\n    level: { type: 'integer' },\n  },\n  required: ['name', 'level'],\n  additionalProperties: false,\n} as const; // \ud83d\udc48 Don't forget the \"as const\" statement\n// (Cf json-schema-to-ts documentation)\n\nconst pokemonAppearedOutputSchema = {\n  type: 'object',\n  properties: {\n    pokemonId: { type: 'string', format: 'uuid' },\n  },\n  required: ['pokemonId'],\n  additionalProperties: false,\n} as const;\n\n// \ud83d\udc47 generics are correctly inferred\nconst pokemonAppearCommand = new JSONSchemaCommand({\n  commandId: 'POKEMON_APPEAR',\n  requiredEventStores: tuple(pokemonsEventStore),\n  inputSchema: pokemonAppearedInputSchema,\n  outputSchema: pokemonAppearedOutputSchema,\n  // \ud83d\udc47 handler input/output types are correctly inferred\n  handler: async (commandInput, [pokemonsEventStore]) => {\n    const { name, level } = commandInput;\n    const pokemonId = generateUuid();\n\n    await pokemonsEventStore.pushEvent({\n      aggregateId: pokemonId,\n      version: 1,\n      type: 'POKEMON_APPEARED',\n      timestamp: new Date().toISOString(),\n      payload: { name, level },\n    });\n\n    return { pokemonId };\n  },\n});\n")),(0,o.kt)("p",null,"\ud83d\udc47 Equivalent to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Command } from '@castore/core';\n\ntype RequiredEventStores = [typeof pokemonsEventStore];\ntype CommandInput = { name: string; level: number };\ntype CommandOutput = { pokemonId: string };\n\nconst pokemonAppearCommand = new Command<\n  RequiredEventStores,\n  RequiredEventStores,\n  CommandInput,\n  CommandOutput\n>({\n  commandId: 'POKEMON_APPEAR',\n  requiredEventStores: [pokemonsEventStore],\n  handler: async (commandInput, [pokemonsEventStore]) => {\n    // ...same code\n  },\n});\n")),(0,o.kt)("h2",{id:"\ufe0f-properties--methods"},"\u2699\ufe0f Properties & Methods"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"JSONSchemaCommand")," implements the ",(0,o.kt)("a",{parentName:"p",href:"https://castore-dev.github.io/castore/docs/the-basics/#command"},(0,o.kt)("inlineCode",{parentName:"a"},"Command"))," class and adds the following properties to it:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"inputSchema ",(0,o.kt)("i",null,"(?object)")),": The command input JSON schema")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const inputSchema = pokemonAppearCommand.inputSchema;\n// => pokemonAppearedInputSchema\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("code",null,"outputSchema ",(0,o.kt)("i",null,"(?object)")),": The command output JSON schema")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const outputSchema = pokemonAppearCommand.outputSchema;\n// => pokemonAppearedOutputSchema\n")))}u.isMDXComponent=!0},30876:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>h});var a=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},i=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,i=m(e,["components","mdxType","originalType","parentName"]),l=p(t),d=o,h=l["".concat(c,".").concat(d)]||l[d]||u[d]||r;return t?a.createElement(h,s(s({ref:n},i),{},{components:t})):a.createElement(h,s({ref:n},i))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=d;var m={};for(var c in n)hasOwnProperty.call(n,c)&&(m[c]=n[c]);m.originalType=e,m[l]="string"==typeof e?e:o,s[1]=m;for(var p=2;p<r;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);