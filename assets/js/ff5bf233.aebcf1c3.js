"use strict";(self.webpackChunk_castore_docs_docusaurus=self.webpackChunk_castore_docs_docusaurus||[]).push([[256],{91052:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>u,toc:()=>p});var a=n(28427),s=(n(2784),n(30876));const r={sidebar_position:9},o="SQS Message Queue Adapter",u={unversionedId:"resources/sqs-message-queue-adapter",id:"resources/sqs-message-queue-adapter",title:"SQS Message Queue Adapter",description:"DRY Castore MessageQueue definition using AWS SQS.",source:"@site/docs/5-resources/9-sqs-message-queue-adapter.md",sourceDirName:"5-resources",slug:"/resources/sqs-message-queue-adapter",permalink:"/castore/docs/resources/sqs-message-queue-adapter",draft:!1,editUrl:"https://github.com/castor-dev/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5-resources/9-sqs-message-queue-adapter.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"JSON Schema Command",permalink:"/castore/docs/resources/json-schema-command"},next:{title:"In Memory Message Queue Adapter",permalink:"/castore/docs/resources/in-memory-message-queue-adapter"}},i={},p=[{value:"\ud83d\udce5 Installation",id:"-installation",level:2},{value:"\ud83d\udc69\u200d\ud83d\udcbb Usage",id:"-usage",level:2},{value:"\ud83e\udd14 How it works",id:"-how-it-works",level:2},{value:"\ud83d\udd11 IAM",id:"-iam",level:2}],l={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(c,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sqs-message-queue-adapter"},"SQS Message Queue Adapter"),(0,s.kt)("p",null,"DRY Castore ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/castore-dev/castore/#--messagequeue"},(0,s.kt)("inlineCode",{parentName:"a"},"MessageQueue"))," definition using ",(0,s.kt)("a",{parentName:"p",href:"https://aws.amazon.com/sqs/"},"AWS SQS"),"."),(0,s.kt)("h2",{id:"-installation"},"\ud83d\udce5 Installation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install @castore/sqs-message-queue-adapter\n\n# yarn\nyarn add @castore/sqs-message-queue-adapter\n")),(0,s.kt)("p",null,"This package has ",(0,s.kt)("inlineCode",{parentName:"p"},"@castore/core")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"@aws-sdk/client-sqs")," (above v3) as peer dependencies, so you will have to install them as well:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install @castore/core @aws-sdk/client-sqs\n\n# yarn\nyarn add @castore/core @aws-sdk/client-sqs\n")),(0,s.kt)("h2",{id:"-usage"},"\ud83d\udc69\u200d\ud83d\udcbb Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import { SQSClient } from '@aws-sdk/client-sqs';\n\nimport { SQSMessageQueueAdapter } from '@castore/sqs-message-queue-adapter';\n\nconst sqsClient = new SQSClient({});\n\nconst messageQueueAdapter = new SQSMessageQueueAdapter({\n  queueUrl: 'https://sqs.us-east-1.amazonaws.com/111122223333/my-super-queue',\n  sqsClient,\n});\n\n// \ud83d\udc47 Alternatively, provide a getter\nconst messageQueueAdapter = new SQSMessageQueueAdapter({\n  queueUrl: () => process.env.MY_SQS_QUEUE_URL,\n  sqsClient,\n});\n\nconst appMessageQueue = new NotificationMessageQueue({\n  ...\n  messageQueueAdapter\n})\n")),(0,s.kt)("p",null,"This will directly plug your MessageQueue to SQS \ud83d\ude4c"),(0,s.kt)("p",null,"If your queue is of type FIFO, don't forget to specify it in the constructor:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const messageQueueAdapter = new SQSMessageQueueAdapter({\n  queueUrl: 'https://sqs.us-east-1.amazonaws.com/111122223333/my-super-queue',\n  sqsClient,\n  fifo: true,\n});\n")),(0,s.kt)("h2",{id:"-how-it-works"},"\ud83e\udd14 How it works"),(0,s.kt)("p",null,"When publishing a message, it is JSON stringified and passed as the record body."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'// \ud83d\udc47 Aggregate exists\n{\n  "body": "{\n    \\"eventStoreId\\": \\"POKEMONS\\",\n    \\"aggregateId\\": \\"123\\",\n  }",\n  ... // <= Other technical SQS properties\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'// \ud83d\udc47 Notification\n{\n  "body": "{\n    \\"eventStoreId\\": \\"POKEMONS\\",\n    \\"event\\": {\n      \\"aggregateId\\": \\"123\\",\n      \\"version\\": 1,\n      \\"type\\": \\"POKEMON_APPEARED\\",\n      \\"timestamp\\": ...\n      ...\n    },\n  }",\n  ...\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'// \ud83d\udc47 State-carrying\n{\n  "body": "{\n    \\"eventStoreId\\": \\"POKEMONS\\",\n    \\"event\\": {\n      \\"aggregateId\\": \\"123\\",\n      ...\n    },\n    \\"aggregate\\": ...\n  }",\n  ...\n}\n')),(0,s.kt)("p",null,"If your queue is of type FIFO, the ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageGroupId")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageDeduplicationId")," will be derived from a combination of the ",(0,s.kt)("inlineCode",{parentName:"p"},"eventStoreId"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"aggregateId")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"version"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'// \ud83d\udc47 Entry example\nconst Entry = {\n  MessageBody: JSON.stringify({ ... }),\n  MessageGroupId: "POKEMONS#123",\n  MessageDeduplicationId: "POKEMONS#123#1", // <= Or "POKEMONS#123" for AggregateExistsMessageQueues\n  ... // <= Other technical SQS properties\n};\n')),(0,s.kt)("p",null,"On the worker side, you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"SQSMessageQueueMessage")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"SQSMessageQueueMessageBody")," TS types to type your argument:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import type {\n  SQSMessageQueueMessage,\n  SQSMessageQueueMessageBody,\n} from '@castore/sqs-message-queue-adapter';\n\nconst appMessagesWorker = async ({ Records }: SQSMessageQueueMessage) => {\n  Records.forEach(({ body }) => {\n    // \ud83d\udc47 Correctly typed!\n    const recordBody: SQSMessageQueueMessageBody<typeof appMessageQueue> =\n      JSON.parse(body);\n  });\n};\n")),(0,s.kt)("h2",{id:"-iam"},"\ud83d\udd11 IAM"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"publishMessage")," method requires the ",(0,s.kt)("inlineCode",{parentName:"p"},"sqs:SendMessage")," IAM permission on the provided SQS queue."))}d.isMDXComponent=!0},30876:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var a=n(2784);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),c=p(n),g=s,m=c["".concat(i,".").concat(g)]||c[g]||d[g]||r;return n?a.createElement(m,o(o({ref:t},l),{},{components:n})):a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=g;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[c]="string"==typeof e?e:s,o[1]=u;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);