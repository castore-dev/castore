"use strict";(self.webpackChunk_castore_docs_docusaurus=self.webpackChunk_castore_docs_docusaurus||[]).push([[178],{79104:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>i});var a=r(28427),n=(r(2784),r(30876));const s={sidebar_position:10},o="In Memory Message Queue Adapter",u={unversionedId:"resources/in-memory-message-queue-adapter",id:"resources/in-memory-message-queue-adapter",title:"In Memory Message Queue Adapter",description:"DRY Castore MessageQueue definition using FastQ.",source:"@site/docs/5-resources/10-in-memory-message-queue-adapter.md",sourceDirName:"5-resources",slug:"/resources/in-memory-message-queue-adapter",permalink:"/castore/docs/resources/in-memory-message-queue-adapter",draft:!1,editUrl:"https://github.com/castor-dev/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/5-resources/10-in-memory-message-queue-adapter.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"SQS Message Queue Adapter",permalink:"/castore/docs/resources/sqs-message-queue-adapter"},next:{title:"EventBridge Message Bus Adapter",permalink:"/castore/docs/resources/event-bridge-message-bus-adapter"}},l={},i=[{value:"\ud83d\udce5 Installation",id:"-installation",level:2},{value:"\ud83d\udc69\u200d\ud83d\udcbb Usage",id:"-usage",level:2},{value:"\ud83e\udd16 Set worker",id:"-set-worker",level:2},{value:"\u267b\ufe0f Retry policy",id:"\ufe0f-retry-policy",level:2}],p={toc:i},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"in-memory-message-queue-adapter"},"In Memory Message Queue Adapter"),(0,n.kt)("p",null,"DRY Castore ",(0,n.kt)("a",{parentName:"p",href:"../../advanced-usage/#messagequeue"},(0,n.kt)("inlineCode",{parentName:"a"},"MessageQueue"))," definition using ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/mcollina/fastq"},"FastQ"),"."),(0,n.kt)("h2",{id:"-installation"},"\ud83d\udce5 Installation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install @castore/in-memory-message-queue-adapter\n\n# yarn\nyarn add @castore/in-memory-message-queue-adapter\n")),(0,n.kt)("p",null,"This package has ",(0,n.kt)("inlineCode",{parentName:"p"},"@castore/core")," as peer dependency, so you will have to install it as well:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install @castore/core\n\n# yarn\nyarn add @castore/core\n")),(0,n.kt)("h2",{id:"-usage"},"\ud83d\udc69\u200d\ud83d\udcbb Usage"),(0,n.kt)("p",null,"The simplest way to use this adapter is to use the ",(0,n.kt)("inlineCode",{parentName:"p"},"attachTo")," static method:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { InMemoryMessageQueueAdapter } from '@castore/in-memory-message-queue-adapter';\n\nconst messageQueueAdapter =\n  InMemoryMessageQueueAdapter.attachTo(appMessageQueue);\n")),(0,n.kt)("p",null,"This will make your ",(0,n.kt)("inlineCode",{parentName:"p"},"messageQueueAdapter")," inherit from your ",(0,n.kt)("inlineCode",{parentName:"p"},"appMessageQueue")," types while plugging them together \ud83d\ude4c"),(0,n.kt)("p",null,"You can also instanciate one on its own, but notice the code duplication:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import type { MessageQueueMessage } from '@castore/core';\nimport { InMemoryMessageQueueAdapter } from '@castore/in-memory-message-queue-adapter';\n\nconst messageQueueAdapter = new InMemoryMessageQueueAdapter<\n  MessageQueueMessage<typeof appMessageQueue>\n>();\n\nappMessageQueue.messageQueueAdapter = messageQueueAdapter;\n")),(0,n.kt)("h2",{id:"-set-worker"},"\ud83e\udd16 Set worker"),(0,n.kt)("p",null,"You can provide an async worker for the queue at construction time, or in context later:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const messageQueueAdapter = InMemoryMessageQueueAdapter.attachTo(\n  appMessageQueue,\n  {\n    worker: async message => {\n      // \ud83d\ude4c Correctly typed!\n      const { eventStoreId, event } = message;\n    },\n  },\n);\n\n// \ud83d\udc47 Alternatively\nconst messageQueueAdapter = new InMemoryMessageQueueAdapter<\n  MessageQueueMessage<typeof appMessageQueue>\n>({\n  worker: async message => {\n    // \ud83d\ude4c Correctly typed!\n    const { eventStoreId, event } = message;\n  },\n});\n\n// \ud83d\udc47 Also alternatively\nmessageQueueAdapter.worker = async message => {\n  // \ud83d\ude4c Correctly typed!\n  const { eventStoreId, event } = message;\n};\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Only one worker at a time can be set up")),(0,n.kt)("h2",{id:"\ufe0f-retry-policy"},"\u267b\ufe0f Retry policy"),(0,n.kt)("p",null,"This adapter will retry failed messages handling. You can specify a different retry policy than the default one via its constructor arguments:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"retryAttempts ",(0,n.kt)("i",null,"(?number = 2)")),": The maximum number of retry attempts for a message in case of worker execution failure. If all the retries fail, the error is logged with `console.error`, and the message ignored."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"retryDelayInMs ",(0,n.kt)("i",null,"(?number = 30000)")),": The minimum delay in milliseconds between the worker execution failure and its first retry."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"retryBackoffRate ",(0,n.kt)("i",null,"(?number = 2)")),": A factor applied to the `retryDelayInMs` at each subsequent retry.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const messageQueueAdapter = InMemoryMessageQueueAdapter.attachTo(appMessageQueue, {\n  retryAttempts: 3,\n  retryDelayInMs: 10000,\n  retryBackoffRate: 1.5,\n});\n\n// \ud83d\udc47 Alternatively\nconst messageQueueAdapter = new InMemoryMessageQueueAdapter<\n  MessageQueueMessage<typeof appMessageQueue>\n>({\n  retryAttempts: 3,\n  retryDelayInMs: 10000,\n  retryBackoffRate: 1.5,\n});\n")),(0,n.kt)("p",null,"For instance, if the worker is continously failing for a specific message, the sequence of code execution (with the default retry policy) will look like this:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Worker execution: \u274c Failure"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"30 seconds of delay")),(0,n.kt)("li",{parentName:"ul"},"Worker execution: \u274c Failure"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"60 seconds of delay (30x2)")),(0,n.kt)("li",{parentName:"ul"},"Worker execution: \u274c Failure"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"No more retry attempt, error is logged"))))}m.isMDXComponent=!0},30876:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var a=r(2784);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),i=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=i(r),d=n,g=c["".concat(l,".").concat(d)]||c[d]||m[d]||s;return r?a.createElement(g,o(o({ref:t},p),{},{components:r})):a.createElement(g,o({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[c]="string"==typeof e?e:n,o[1]=u;for(var i=2;i<s;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);