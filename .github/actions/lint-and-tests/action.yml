name: Lint & Test
description: Run linters and tests on library
inputs:
  path:
    required: true
    description: Path to the directory to lint and test
  typescript-version:
    description: TS version to use
    default: 'default'

runs:
  using: composite
  steps:
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install node_modules & package
      uses: ./.github/actions/install-node-modules-and-package
      with:
        typescript-version: ${{ inputs.typescript-version }}

    - name: Run lint
      run: |
        cd ${{ inputs.path }}
        if [[ $(cat package.json | jq '.scripts["test-linter"]') != null ]]; then
          yarn test-linter --max-warnings 0
        else
          echo "No linter test script found in package.json"
        fi
      shell: bash

    - name: Run stylelint
      run: |
        cd ${{ inputs.path }}
        if [[ $(cat package.json | jq '.scripts["test-stylelint"]') != null ]]; then
          yarn test-stylelint
        else
          echo "No stylelint test script found in package.json"
        fi
      shell: bash

    - name: Run unit tests
      run: |
        cd ${{ inputs.path }}
        if [[ $(cat package.json | jq '.scripts["test-unit"]') != null ]]; then
          yarn test-unit
        else
          echo "No unit test script found in package.json"
        fi
      shell: bash

    - name: Run type test
      run: |
        cd ${{ inputs.path }}
        if [[ $(cat package.json | jq '.scripts["test-type"]') != null ]]; then
          yarn test-type
        else
          echo "No type test script found in package.json"
        fi
      shell: bash

    - name: Run circular dependencies test
      run: |
        cd ${{ inputs.path }}
        if [[ $(cat package.json | jq '.scripts["test-circular"]') != null ]]; then
          yarn test-circular
        else
          echo "No circular dependencies test script found in package.json"
        fi
      shell: bash
